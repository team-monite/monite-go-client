// This file was auto-generated by Fern from our API Definition.

package fluidstack

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/team-monite/monite-go-client/internal"
	time "time"
)

type UnitListResponse struct {
	Data []*UnitResponse `json:"data" url:"data"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UnitListResponse) GetData() []*UnitResponse {
	if u == nil {
		return nil
	}
	return u.Data
}

func (u *UnitListResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UnitListResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UnitListResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UnitListResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UnitListResponse) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UnitResponse struct {
	Id          string    `json:"id" url:"id"`
	CreatedAt   time.Time `json:"created_at" url:"created_at"`
	UpdatedAt   time.Time `json:"updated_at" url:"updated_at"`
	Description *string   `json:"description,omitempty" url:"description,omitempty"`
	Name        string    `json:"name" url:"name"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UnitResponse) GetId() string {
	if u == nil {
		return ""
	}
	return u.Id
}

func (u *UnitResponse) GetCreatedAt() time.Time {
	if u == nil {
		return time.Time{}
	}
	return u.CreatedAt
}

func (u *UnitResponse) GetUpdatedAt() time.Time {
	if u == nil {
		return time.Time{}
	}
	return u.UpdatedAt
}

func (u *UnitResponse) GetDescription() *string {
	if u == nil {
		return nil
	}
	return u.Description
}

func (u *UnitResponse) GetName() string {
	if u == nil {
		return ""
	}
	return u.Name
}

func (u *UnitResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UnitResponse) UnmarshalJSON(data []byte) error {
	type embed UnitResponse
	var unmarshaler = struct {
		embed
		CreatedAt *internal.DateTime `json:"created_at"`
		UpdatedAt *internal.DateTime `json:"updated_at"`
	}{
		embed: embed(*u),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*u = UnitResponse(unmarshaler.embed)
	u.CreatedAt = unmarshaler.CreatedAt.Time()
	u.UpdatedAt = unmarshaler.UpdatedAt.Time()
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UnitResponse) MarshalJSON() ([]byte, error) {
	type embed UnitResponse
	var marshaler = struct {
		embed
		CreatedAt *internal.DateTime `json:"created_at"`
		UpdatedAt *internal.DateTime `json:"updated_at"`
	}{
		embed:     embed(*u),
		CreatedAt: internal.NewDateTime(u.CreatedAt),
		UpdatedAt: internal.NewDateTime(u.UpdatedAt),
	}
	return json.Marshal(marshaler)
}

func (u *UnitResponse) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UnitUpdate struct {
	Description *string `json:"description,omitempty" url:"-"`
	Name        *string `json:"name,omitempty" url:"-"`
}
