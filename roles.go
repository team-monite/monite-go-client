// This file was auto-generated by Fern from our API Definition.

package fluidstack

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/team-monite/monite-go-client/internal"
	time "time"
)

type CreateRoleRequest struct {
	// Role name
	Name string `json:"name" url:"-"`
	// Access permissions
	Permissions *BizObjectsSchema `json:"permissions,omitempty" url:"-"`
}

type RolesGetRequest struct {
	// Order by
	Order *OrderEnum `json:"-" url:"order,omitempty"`
	// Max is 100
	Limit *int `json:"-" url:"limit,omitempty"`
	// A token, obtained from previous page. Prior over other filters
	PaginationToken *string `json:"-" url:"pagination_token,omitempty"`
	// Allowed sort fields
	Sort         *RoleCursorFields `json:"-" url:"sort,omitempty"`
	IdIn         []*string         `json:"-" url:"id__in,omitempty"`
	Name         *string           `json:"-" url:"name,omitempty"`
	CreatedAt    *time.Time        `json:"-" url:"created_at,omitempty"`
	CreatedAtGt  *time.Time        `json:"-" url:"created_at__gt,omitempty"`
	CreatedAtLt  *time.Time        `json:"-" url:"created_at__lt,omitempty"`
	CreatedAtGte *time.Time        `json:"-" url:"created_at__gte,omitempty"`
	CreatedAtLte *time.Time        `json:"-" url:"created_at__lte,omitempty"`
}

type RoleCursorFields string

const (
	RoleCursorFieldsUpdatedAt RoleCursorFields = "updated_at"
	RoleCursorFieldsCreatedAt RoleCursorFields = "created_at"
)

func NewRoleCursorFieldsFromString(s string) (RoleCursorFields, error) {
	switch s {
	case "updated_at":
		return RoleCursorFieldsUpdatedAt, nil
	case "created_at":
		return RoleCursorFieldsCreatedAt, nil
	}
	var t RoleCursorFields
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (r RoleCursorFields) Ptr() *RoleCursorFields {
	return &r
}

type RolePaginationResponse struct {
	// array of records
	Data []*RoleResponse `json:"data" url:"data"`
	// A token that can be sent in the `pagination_token` query parameter to get the next page of results, or `null` if there is no next page (i.e. you've reached the last page).
	NextPaginationToken *string `json:"next_pagination_token,omitempty" url:"next_pagination_token,omitempty"`
	// A token that can be sent in the `pagination_token` query parameter to get the previous page of results, or `null` if there is no previous page (i.e. you've reached the first page).
	PrevPaginationToken *string `json:"prev_pagination_token,omitempty" url:"prev_pagination_token,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *RolePaginationResponse) GetData() []*RoleResponse {
	if r == nil {
		return nil
	}
	return r.Data
}

func (r *RolePaginationResponse) GetNextPaginationToken() *string {
	if r == nil {
		return nil
	}
	return r.NextPaginationToken
}

func (r *RolePaginationResponse) GetPrevPaginationToken() *string {
	if r == nil {
		return nil
	}
	return r.PrevPaginationToken
}

func (r *RolePaginationResponse) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RolePaginationResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler RolePaginationResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RolePaginationResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *RolePaginationResponse) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type UpdateRoleRequest struct {
	// Role name
	Name *string `json:"name,omitempty" url:"-"`
	// Access permissions
	Permissions *BizObjectsSchema `json:"permissions,omitempty" url:"-"`
}
