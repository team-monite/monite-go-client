// This file was auto-generated by Fern from our API Definition.

package fluidstack

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/team-monite/monite-go-client/internal"
	time "time"
)

type OnboardingLinkRequest struct {
	ExpiresAt  time.Time `json:"expires_at" url:"-"`
	RefreshUrl string    `json:"refresh_url" url:"-"`
	ReturnUrl  string    `json:"return_url" url:"-"`
}

func (o *OnboardingLinkRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler OnboardingLinkRequest
	var body unmarshaler
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	*o = OnboardingLinkRequest(body)
	return nil
}

func (o *OnboardingLinkRequest) MarshalJSON() ([]byte, error) {
	type embed OnboardingLinkRequest
	var marshaler = struct {
		embed
		ExpiresAt *internal.DateTime `json:"expires_at"`
	}{
		embed:     embed(*o),
		ExpiresAt: internal.NewDateTime(o.ExpiresAt),
	}
	return json.Marshal(marshaler)
}

type OnboardingLinkPublicResponse struct {
	Id         string    `json:"id" url:"id"`
	EntityId   string    `json:"entity_id" url:"entity_id"`
	ExpiresAt  time.Time `json:"expires_at" url:"expires_at"`
	RefreshUrl string    `json:"refresh_url" url:"refresh_url"`
	ReturnUrl  string    `json:"return_url" url:"return_url"`
	Url        string    `json:"url" url:"url"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (o *OnboardingLinkPublicResponse) GetId() string {
	if o == nil {
		return ""
	}
	return o.Id
}

func (o *OnboardingLinkPublicResponse) GetEntityId() string {
	if o == nil {
		return ""
	}
	return o.EntityId
}

func (o *OnboardingLinkPublicResponse) GetExpiresAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ExpiresAt
}

func (o *OnboardingLinkPublicResponse) GetRefreshUrl() string {
	if o == nil {
		return ""
	}
	return o.RefreshUrl
}

func (o *OnboardingLinkPublicResponse) GetReturnUrl() string {
	if o == nil {
		return ""
	}
	return o.ReturnUrl
}

func (o *OnboardingLinkPublicResponse) GetUrl() string {
	if o == nil {
		return ""
	}
	return o.Url
}

func (o *OnboardingLinkPublicResponse) GetExtraProperties() map[string]interface{} {
	return o.extraProperties
}

func (o *OnboardingLinkPublicResponse) UnmarshalJSON(data []byte) error {
	type embed OnboardingLinkPublicResponse
	var unmarshaler = struct {
		embed
		ExpiresAt *internal.DateTime `json:"expires_at"`
	}{
		embed: embed(*o),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*o = OnboardingLinkPublicResponse(unmarshaler.embed)
	o.ExpiresAt = unmarshaler.ExpiresAt.Time()
	extraProperties, err := internal.ExtractExtraProperties(data, *o)
	if err != nil {
		return err
	}
	o.extraProperties = extraProperties
	o.rawJSON = json.RawMessage(data)
	return nil
}

func (o *OnboardingLinkPublicResponse) MarshalJSON() ([]byte, error) {
	type embed OnboardingLinkPublicResponse
	var marshaler = struct {
		embed
		ExpiresAt *internal.DateTime `json:"expires_at"`
	}{
		embed:     embed(*o),
		ExpiresAt: internal.NewDateTime(o.ExpiresAt),
	}
	return json.Marshal(marshaler)
}

func (o *OnboardingLinkPublicResponse) String() string {
	if len(o.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(o.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}
