// This file was auto-generated by Fern from our API Definition.

package fluidstack

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/team-monite/monite-go-client/internal"
)

type ObtainTokenPayload struct {
	ClientId     string    `json:"client_id" url:"-"`
	ClientSecret string    `json:"client_secret" url:"-"`
	EntityUserId *string   `json:"entity_user_id,omitempty" url:"-"`
	GrantType    GrantType `json:"grant_type" url:"-"`
}

type RevokeTokenPayload struct {
	ClientId     string `json:"client_id" url:"-"`
	ClientSecret string `json:"client_secret" url:"-"`
	Token        string `json:"token" url:"-"`
}

type AccessTokenResponse struct {
	AccessToken string `json:"access_token" url:"access_token"`
	ExpiresIn   int    `json:"expires_in" url:"expires_in"`
	TokenType   string `json:"token_type" url:"token_type"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AccessTokenResponse) GetAccessToken() string {
	if a == nil {
		return ""
	}
	return a.AccessToken
}

func (a *AccessTokenResponse) GetExpiresIn() int {
	if a == nil {
		return 0
	}
	return a.ExpiresIn
}

func (a *AccessTokenResponse) GetTokenType() string {
	if a == nil {
		return ""
	}
	return a.TokenType
}

func (a *AccessTokenResponse) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AccessTokenResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler AccessTokenResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AccessTokenResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AccessTokenResponse) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type GrantType string

const (
	GrantTypeClientCredentials GrantType = "client_credentials"
	GrantTypeEntityUser        GrantType = "entity_user"
)

func NewGrantTypeFromString(s string) (GrantType, error) {
	switch s {
	case "client_credentials":
		return GrantTypeClientCredentials, nil
	case "entity_user":
		return GrantTypeEntityUser, nil
	}
	var t GrantType
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (g GrantType) Ptr() *GrantType {
	return &g
}

type MessageResponse struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (m *MessageResponse) GetMessage() string {
	if m == nil {
		return ""
	}
	return m.Message
}

func (m *MessageResponse) GetExtraProperties() map[string]interface{} {
	return m.extraProperties
}

func (m *MessageResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler MessageResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*m = MessageResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *m)
	if err != nil {
		return err
	}
	m.extraProperties = extraProperties
	m.rawJSON = json.RawMessage(data)
	return nil
}

func (m *MessageResponse) String() string {
	if len(m.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(m.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(m); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", m)
}
