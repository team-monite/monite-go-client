// This file was auto-generated by Fern from our API Definition.

package fluidstack

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/team-monite/monite-go-client/internal"
	time "time"
)

type WebhookDeliveriesGetRequest struct {
	// Order by
	Order *OrderEnum `json:"-" url:"order,omitempty"`
	// Max is 100
	Limit *int `json:"-" url:"limit,omitempty"`
	// A token, obtained from previous page. Prior over other filters
	PaginationToken *string `json:"-" url:"pagination_token,omitempty"`
	// Allowed sort fields
	Sort         *WebhookDeliveryCursorFields `json:"-" url:"sort,omitempty"`
	EventId      *string                      `json:"-" url:"event_id,omitempty"`
	ObjectType   *WebhookObjectType           `json:"-" url:"object_type,omitempty"`
	EventAction  *string                      `json:"-" url:"event_action,omitempty"`
	CreatedAtGt  *time.Time                   `json:"-" url:"created_at__gt,omitempty"`
	CreatedAtLt  *time.Time                   `json:"-" url:"created_at__lt,omitempty"`
	CreatedAtGte *time.Time                   `json:"-" url:"created_at__gte,omitempty"`
	CreatedAtLte *time.Time                   `json:"-" url:"created_at__lte,omitempty"`
}

type WebhookDeliveryCursorFields string

const (
	WebhookDeliveryCursorFieldsCreatedAt WebhookDeliveryCursorFields = "created_at"
	WebhookDeliveryCursorFieldsUpdatedAt WebhookDeliveryCursorFields = "updated_at"
)

func NewWebhookDeliveryCursorFieldsFromString(s string) (WebhookDeliveryCursorFields, error) {
	switch s {
	case "created_at":
		return WebhookDeliveryCursorFieldsCreatedAt, nil
	case "updated_at":
		return WebhookDeliveryCursorFieldsUpdatedAt, nil
	}
	var t WebhookDeliveryCursorFields
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (w WebhookDeliveryCursorFields) Ptr() *WebhookDeliveryCursorFields {
	return &w
}

type WebhookDeliveryPaginationResource struct {
	// A set of webhooks returned per page
	Data []*WebhookDeliveryResource `json:"data" url:"data"`
	// A token that can be sent in the `pagination_token` query parameter to get the next page of results, or `null` if there is no next page (i.e. you've reached the last page).
	NextPaginationToken *string `json:"next_pagination_token,omitempty" url:"next_pagination_token,omitempty"`
	// A token that can be sent in the `pagination_token` query parameter to get the previous page of results, or `null` if there is no previous page (i.e. you've reached the first page).
	PrevPaginationToken *string `json:"prev_pagination_token,omitempty" url:"prev_pagination_token,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (w *WebhookDeliveryPaginationResource) GetData() []*WebhookDeliveryResource {
	if w == nil {
		return nil
	}
	return w.Data
}

func (w *WebhookDeliveryPaginationResource) GetNextPaginationToken() *string {
	if w == nil {
		return nil
	}
	return w.NextPaginationToken
}

func (w *WebhookDeliveryPaginationResource) GetPrevPaginationToken() *string {
	if w == nil {
		return nil
	}
	return w.PrevPaginationToken
}

func (w *WebhookDeliveryPaginationResource) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WebhookDeliveryPaginationResource) UnmarshalJSON(data []byte) error {
	type unmarshaler WebhookDeliveryPaginationResource
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*w = WebhookDeliveryPaginationResource(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties
	w.rawJSON = json.RawMessage(data)
	return nil
}

func (w *WebhookDeliveryPaginationResource) String() string {
	if len(w.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(w.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}

type WebhookDeliveryResource struct {
	Id                 string  `json:"id" url:"id"`
	EventId            string  `json:"event_id" url:"event_id"`
	RequestsMadeCount  int     `json:"requests_made_count" url:"requests_made_count"`
	Response           *string `json:"response,omitempty" url:"response,omitempty"`
	ResponseStatusCode *int    `json:"response_status_code,omitempty" url:"response_status_code,omitempty"`
	Url                string  `json:"url" url:"url"`
	WasSuccessful      *bool   `json:"was_successful,omitempty" url:"was_successful,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (w *WebhookDeliveryResource) GetId() string {
	if w == nil {
		return ""
	}
	return w.Id
}

func (w *WebhookDeliveryResource) GetEventId() string {
	if w == nil {
		return ""
	}
	return w.EventId
}

func (w *WebhookDeliveryResource) GetRequestsMadeCount() int {
	if w == nil {
		return 0
	}
	return w.RequestsMadeCount
}

func (w *WebhookDeliveryResource) GetResponse() *string {
	if w == nil {
		return nil
	}
	return w.Response
}

func (w *WebhookDeliveryResource) GetResponseStatusCode() *int {
	if w == nil {
		return nil
	}
	return w.ResponseStatusCode
}

func (w *WebhookDeliveryResource) GetUrl() string {
	if w == nil {
		return ""
	}
	return w.Url
}

func (w *WebhookDeliveryResource) GetWasSuccessful() *bool {
	if w == nil {
		return nil
	}
	return w.WasSuccessful
}

func (w *WebhookDeliveryResource) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WebhookDeliveryResource) UnmarshalJSON(data []byte) error {
	type unmarshaler WebhookDeliveryResource
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*w = WebhookDeliveryResource(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties
	w.rawJSON = json.RawMessage(data)
	return nil
}

func (w *WebhookDeliveryResource) String() string {
	if len(w.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(w.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}
