// This file was auto-generated by Fern from our API Definition.

package fluidstack

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/team-monite/monite-go-client/internal"
)

type AirwallexPlaidBankAccountVerificationStatus string

const (
	AirwallexPlaidBankAccountVerificationStatusVerified  AirwallexPlaidBankAccountVerificationStatus = "verified"
	AirwallexPlaidBankAccountVerificationStatusExpired   AirwallexPlaidBankAccountVerificationStatus = "expired"
	AirwallexPlaidBankAccountVerificationStatusSuspended AirwallexPlaidBankAccountVerificationStatus = "suspended"
)

func NewAirwallexPlaidBankAccountVerificationStatusFromString(s string) (AirwallexPlaidBankAccountVerificationStatus, error) {
	switch s {
	case "verified":
		return AirwallexPlaidBankAccountVerificationStatusVerified, nil
	case "expired":
		return AirwallexPlaidBankAccountVerificationStatusExpired, nil
	case "suspended":
		return AirwallexPlaidBankAccountVerificationStatusSuspended, nil
	}
	var t AirwallexPlaidBankAccountVerificationStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (a AirwallexPlaidBankAccountVerificationStatus) Ptr() *AirwallexPlaidBankAccountVerificationStatus {
	return &a
}

type AirwallexPlaidVerification struct {
	// Status of the bank account verification
	Status AirwallexPlaidBankAccountVerificationStatus `json:"status" url:"status"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AirwallexPlaidVerification) GetStatus() AirwallexPlaidBankAccountVerificationStatus {
	if a == nil {
		return ""
	}
	return a.Status
}

func (a *AirwallexPlaidVerification) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AirwallexPlaidVerification) UnmarshalJSON(data []byte) error {
	type unmarshaler AirwallexPlaidVerification
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AirwallexPlaidVerification(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AirwallexPlaidVerification) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type BankAccountVerifications struct {
	// Airwallex Plaid verification
	AirwallexPlaid *AirwallexPlaidVerification `json:"airwallex_plaid,omitempty" url:"airwallex_plaid,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *BankAccountVerifications) GetAirwallexPlaid() *AirwallexPlaidVerification {
	if b == nil {
		return nil
	}
	return b.AirwallexPlaid
}

func (b *BankAccountVerifications) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *BankAccountVerifications) UnmarshalJSON(data []byte) error {
	type unmarshaler BankAccountVerifications
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BankAccountVerifications(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *BankAccountVerifications) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}
